Command, a C++ library for handling command line arguments

Designing to be used like follows:

Example:

    void some_function(std::string str) {
        std::cout << "Some function" << std::endl;
    }

    command::Command command(argc, argv, {
        command::Option<std::string>("f", "File path", [](std::string value)->void { cout << "Sth: " << value << endl; }),
        command::Argument<std::string>("File path", []()->void { cout << "Sth: " << value << endl; }),
        command::Option<void>("help", "Help description", [](void)->void { cout << "Sth: " << value << endl; }),
        command::Option<void>("verbose", "Verbose option description", &myClass->verbose),
        command::Option<void>("verbose", "Verbose option description", some_function)
    });

